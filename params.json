{"name":"TinyMotion","body":"TinyMotion\r\n==========\r\n\r\nA battery powered, remote motion sensor.\r\n\r\n### Features\r\n\r\n* 8 second heartbeat (periodic check-ins let you know if the chip is still alive and kicking).\r\n* Low power: Properly configured, all components use very little power until woken up either by the heartbeat check-in or by physical intervention (motion/test button).\r\n* Can be programmed using the familiar [Arduino environment](http://hlt.media.mit.edu/?p=1695)\r\n\r\n### Power\r\n\r\nWith a 1300mAh LiPoly battery (upped to 5v by a MintyBoost), TinyMotion might stay on\r\nfor about 113.45 days, or just around 3.72 months. Real world conditions \r\ncause all sorts of degradation in run time. Expect (conservatively) that TinyMotion will\r\nlast you a few weeks at best. (No promises!)\r\n\r\nFor more information about power usage, fuses, clock and pin connections check out the \r\n[source](https://github.com/davidk/TinyMotion/raw/master/TinyMotion.ino).\r\n\r\n### Building on your breadboard\r\n\r\nTo build your own TinyMotion, get all the parts from the parts list and hook everything\r\nup as like [this](https://github.com/davidk/TinyMotion/raw/master/breadboard.png).\r\n\r\nBe sure the set the PIR to 'L'. By default it is set to 'H'.\r\n\r\nFor a wiring diagram, there is a crude schematic [here](https://github.com/davidk/TinyMotion/raw/master/schematic.png).\r\n\r\n### Parts list\r\n\r\nThe following parts are needed to build up a working TinyMotion implementation.\r\n\r\n* [ATTiny85](http://www.mouser.com/ProductDetail/Atmel/ATtiny85-20PU/?qs=8jWQYweyg6NCiiaOb5GI9Q%3d%3d)\r\n* [PIR sensor](http://www.adafruit.com/products/189)\r\n* [2x4 DIP socket](http://search.digikey.com/scripts/dksearch/dksus.dll?vendor=0&keywords=3M5461-ND)\r\n* [Header](https://www.adafruit.com/products/400)\r\n* [Female-Female jumper wiring](https://www.adafruit.com/products/266)\r\n* 2x [XBee adapter kit](https://www.adafruit.com/products/126)\r\n* 2x [XBee series 1](https://www.adafruit.com/products/128)    \r\n* [Protoboard](https://www.adafruit.com/products/589)\r\n* [Screw terminal](https://www.adafruit.com/products/724)\r\n* [3mm Green LED](https://www.adafruit.com/products/779)\r\n* [Switch button](https://www.adafruit.com/products/367)\r\n* 1x330 ohm (LED), 1x10k ohm (switch pull-down), 1x100ohm (switch-pin buffer) resistors\r\n* [5v power source](https://www.adafruit.com/products/14)\r\n* Arduino (you will need a 10uF cap for the reset line) or other AVR programmer\r\n\r\n### Programming\r\n\r\n#### If using Arduino\r\n\r\nFollow these instructions to setup the [Arduino environment](http://hlt.media.mit.edu/?p=1695) so that your ATTiny85 chip can be programmed. Be sure (and its super important!) to burn the 8MHz bootloader onto your ATTiny85. This is required for SoftwareSerial to work. Otherwise all the data coming through on the remote end will be gibberish, or blank.\r\n\r\nTo program, copy the [TinyMotion.ino](https://github.com/davidk/TinyMotion/raw/master/TinyMotion.ino)'s file contents into a new sketch and just upload it.\r\n\r\n#### Dedicated AVR programmer\r\n\r\nUse the [TinyMotion.hex](https://github.com/davidk/TinyMotion/raw/master/TinyMotion.hex) file to upload. Be sure to burn your fuses to enable the 8Mhz clock and other features. \r\n\r\nThe fuse settings can be found at the top of the source file [here](https://github.com/davidk/TinyMotion/raw/master/TinyMotion.ino).\r\n\r\n### Notes on XBee\r\n\r\nPin hibernate must be enabled (**only**) on the TinyMotion's XBee to save power. \r\nUnder `Sleep Modes (NonBeacon)` in X-CTU, select `1 - PIN HIBERNATE` in \r\nthe `(0) SM - Sleep Mode` category. Click 'Write' to finalize the change.\r\n\r\nIf this is your first time setting up an XBee, try Adafruit's helpful guide \r\nwhich walks you through the setup process. It can be found [here](http://www.ladyada.net/make/xbee/configure.html).\r\n\r\nThe ATtiny chip will wake up the XBee when it needs to transmit data by changing the DTR pin.","tagline":"","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}